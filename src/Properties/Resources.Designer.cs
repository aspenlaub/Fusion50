//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aspenlaub.Net.GitHub.CSharp.Fusion50.Properties {
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Aspenlaub.Net.GitHub.CSharp.Fusion.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No release binaries changed between head tip sha &apos;{0}&apos; (pushed) and &apos;{1}&apos; (not pushed) -&gt; considering that one pushed to &apos;{2}&apos;.
        /// </summary>
        internal static string AddingEquivalentHeadTipSha {
            get {
                return ResourceManager.GetString("AddingEquivalentHeadTipSha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected at least one file to commit and push.
        /// </summary>
        internal static string AtLeastOneFileExpected {
            get {
                return ResourceManager.GetString("AtLeastOneFileExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access token with purpose AutoCommitPush not found.
        /// </summary>
        internal static string AutoCommitPushAccessTokenNotFound {
            get {
                return ResourceManager.GetString("AutoCommitPushAccessTokenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automated update of &quot;{0}&quot;.
        /// </summary>
        internal static string AutoUpdateOfCakeFile {
            get {
                return ResourceManager.GetString("AutoUpdateOfCakeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building &apos;{0}&apos; at head tip ID sha &apos;{1}&apos;.
        /// </summary>
        internal static string Building {
            get {
                return ResourceManager.GetString("Building", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot make head tip sha &apos;{0}&apos; and &apos;{1}&apos; equivalent because the former has not been pushed to &apos;{2}&apos;.
        /// </summary>
        internal static string CannotMakeHeadTipShasEquivalentCauseSourceHasNotBeenPushed {
            get {
                return ResourceManager.GetString("CannotMakeHeadTipShasEquivalentCauseSourceHasNotBeenPushed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is not release, cannot make head tip sha &apos;{0}&apos; and &apos;{1}&apos; equivalent.
        /// </summary>
        internal static string CannotMakeHeadTipShasEquivalentCauseThisIsNotRelease {
            get {
                return ResourceManager.GetString("CannotMakeHeadTipShasEquivalentCauseThisIsNotRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files have been copied, cannot make head tip sha &apos;{0}&apos; and &apos;{1}&apos; equivalent.
        /// </summary>
        internal static string CannotMakeHeadTipShasEquivalentDueToCopies {
            get {
                return ResourceManager.GetString("CannotMakeHeadTipShasEquivalentDueToCopies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could update package {0} from {1} to {2}.
        /// </summary>
        internal static string CanUpdatePackageFromTo {
            get {
                return ResourceManager.GetString("CanUpdatePackageFromTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not the master branch that is checked out.
        /// </summary>
        internal static string CheckedOutBranchIsNotMaster {
            get {
                return ResourceManager.GetString("CheckedOutBranchIsNotMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking if there are changed binaries between head tip shas &quot;{0}&quot; and &quot;{1}&quot;.
        /// </summary>
        internal static string CheckingIfThereAreChangedBinaries {
            get {
                return ResourceManager.GetString("CheckingIfThereAreChangedBinaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking project ID against solution ID.
        /// </summary>
        internal static string CheckingProjectVsSolution {
            get {
                return ResourceManager.GetString("CheckingProjectVsSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking remote package tag.
        /// </summary>
        internal static string CheckingRemotePackageTag {
            get {
                return ResourceManager.GetString("CheckingRemotePackageTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load project &quot;{0}&quot;.
        /// </summary>
        internal static string CouldNotLoadProject {
            get {
                return ResourceManager.GetString("CouldNotLoadProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not update &apos;{0}&apos;.
        /// </summary>
        internal static string CouldNotUpdate {
            get {
                return ResourceManager.GetString("CouldNotUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected exactly one file to commit and push, got: {0}.
        /// </summary>
        internal static string ExactlyOneFileExpected {
            get {
                return ResourceManager.GetString("ExactlyOneFileExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build &apos;{0}&apos; at head tip ID sha &apos;{1}&apos;.
        /// </summary>
        internal static string FailedToBuild {
            get {
                return ResourceManager.GetString("FailedToBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy &quot;{0}&quot; to &quot;{1}.
        /// </summary>
        internal static string FailedToCopy {
            get {
                return ResourceManager.GetString("FailedToCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to rename &quot;{0}&quot; into &quot;{1}&quot;.
        /// </summary>
        internal static string FailedToRename {
            get {
                return ResourceManager.GetString("FailedToRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to restore nuget packages for &apos;{0}&apos; at head tip ID sha &apos;{1}&apos;.
        /// </summary>
        internal static string FailedToRestore {
            get {
                return ResourceManager.GetString("FailedToRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is new.
        /// </summary>
        internal static string FileIsNew {
            get {
                return ResourceManager.GetString("FileIsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &quot;{0}&quot; not found.
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; renamed into &quot;{1}&quot;, but the original file still exists.
        /// </summary>
        internal static string FileRenamedButOriginalStillExists {
            get {
                return ResourceManager.GetString("FileRenamedButOriginalStillExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files differ in length (new {0}, old {1}).
        /// </summary>
        internal static string FilesDifferInLength {
            get {
                return ResourceManager.GetString("FilesDifferInLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files are equal in length but have {0} differences, which cannot be ignored.
        /// </summary>
        internal static string FilesHaveEqualLengthButNDifferences {
            get {
                return ResourceManager.GetString("FilesHaveEqualLengthButNDifferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files are equal in length but it cannot be ignored.
        /// </summary>
        internal static string FilesHaveEqualLengthThatCannotBeIgnored {
            get {
                return ResourceManager.GetString("FilesHaveEqualLengthThatCannotBeIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found file &quot;{0}&quot;.
        /// </summary>
        internal static string FoundFile {
            get {
                return ResourceManager.GetString("FoundFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found local package {0}.
        /// </summary>
        internal static string FoundLocalPackage {
            get {
                return ResourceManager.GetString("FoundLocalPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found remote package {0}.
        /// </summary>
        internal static string FoundRemotePackage {
            get {
                return ResourceManager.GetString("FoundRemotePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Head tip sha &apos;{0}&apos; has already been pushed to &apos;{1}&apos;.
        /// </summary>
        internal static string HeadTipShaHasAlreadyBeenPushed {
            get {
                return ResourceManager.GetString("HeadTipShaHasAlreadyBeenPushed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Head tip sha {0} has not yet been pushed.
        /// </summary>
        internal static string HeadTipShaNotPushed {
            get {
                return ResourceManager.GetString("HeadTipShaNotPushed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifying feed URL.
        /// </summary>
        internal static string IdentifyingFeedUrl {
            get {
                return ResourceManager.GetString("IdentifyingFeedUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifying nuget feed.
        /// </summary>
        internal static string IdentifyingNugetFeed {
            get {
                return ResourceManager.GetString("IdentifyingNugetFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomplete &apos;DeveloperSettings&apos;. Please update &quot;{0}&quot; in your SecretRepository.
        /// </summary>
        internal static string IncompleteDeveloperSettings {
            get {
                return ResourceManager.GetString("IncompleteDeveloperSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The json files are equal in length but it cannot be ignored.
        /// </summary>
        internal static string JsonFilesHaveEqualLengthThatCannotBeIgnored {
            get {
                return ResourceManager.GetString("JsonFilesHaveEqualLengthThatCannotBeIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading nuget feeds.
        /// </summary>
        internal static string LoadingNugetFeeds {
            get {
                return ResourceManager.GetString("LoadingNugetFeeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading project.
        /// </summary>
        internal static string LoadingProject {
            get {
                return ResourceManager.GetString("LoadingProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading pushed head tip shas.
        /// </summary>
        internal static string LoadingPushedHeadTipShas {
            get {
                return ResourceManager.GetString("LoadingPushedHeadTipShas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing &apos;DeveloperSettings&apos; secret. Open &quot;{0}&quot; in SecretSamples, modify it and save it in SecretRepository.
        /// </summary>
        internal static string MissingDeveloperSettings {
            get {
                return ResourceManager.GetString("MissingDeveloperSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No binaries have changed, there is no need to push.
        /// </summary>
        internal static string NoBinariesHaveChanged {
            get {
                return ResourceManager.GetString("NoBinariesHaveChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no files with uncommitted changes.
        /// </summary>
        internal static string NoFileWithUncommittedChanges {
            get {
                return ResourceManager.GetString("NoFileWithUncommittedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No nuget feed id has been provided, therefore the head tip sha equivalence of &apos;{0}&apos; and &apos;{1}&apos; is not checked.
        /// </summary>
        internal static string NoNugetFeedIdThereforeNoEquivalenceCheck {
            get {
                return ResourceManager.GetString("NoNugetFeedIdThereforeNoEquivalenceCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder &quot;{0}&quot; does not contain any packages.
        /// </summary>
        internal static string NoPackageFilesFound {
            get {
                return ResourceManager.GetString("NoPackageFilesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project does not push packages, therefore the head tip sha equivalence of &apos;{0}&apos; and &apos;{1}&apos; is not checked.
        /// </summary>
        internal static string NoPackagesThereforeNoEquivalenceCheck {
            get {
                return ResourceManager.GetString("NoPackagesThereforeNoEquivalenceCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feed &quot;{0}&quot; does not provide package &quot;{1}&quot;.
        /// </summary>
        internal static string NoRemotePackageFilesFound {
            get {
                return ResourceManager.GetString("NoRemotePackageFilesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of files with uncommitted changes has changed. Expected {0}, got {1}.
        /// </summary>
        internal static string NumberOfFilesWithUncommittedChangesHasChanged {
            get {
                return ResourceManager.GetString("NumberOfFilesWithUncommittedChangesHasChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected cake files to commit and push, no other file types.
        /// </summary>
        internal static string OnlyCakeFilesExpected {
            get {
                return ResourceManager.GetString("OnlyCakeFilesExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected .csproj and .config files to commit and push, no other file types.
        /// </summary>
        internal static string OnlyCsProjAndConfigFilesExpected {
            get {
                return ResourceManager.GetString("OnlyCsProjAndConfigFilesExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other files require update anyway.
        /// </summary>
        internal static string OtherFilesRequireUpdateAnyway {
            get {
                return ResourceManager.GetString("OtherFilesRequireUpdateAnyway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find owner and name of the remote repository.
        /// </summary>
        internal static string OwnerAndNameNotFound {
            get {
                return ResourceManager.GetString("OwnerAndNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote package is already tagged with the head tip sha.
        /// </summary>
        internal static string PackageAlreadyTaggedWithHeadTipSha {
            get {
                return ResourceManager.GetString("PackageAlreadyTaggedWithHeadTipSha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package needs to be pushed.
        /// </summary>
        internal static string PackageNeedsToBePushed {
            get {
                return ResourceManager.GetString("PackageNeedsToBePushed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package/-s updated to most recent version.
        /// </summary>
        internal static string PackageUpdates {
            get {
                return ResourceManager.GetString("PackageUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no project file &quot;{0}&quot;.
        /// </summary>
        internal static string ProjectFileNotFound {
            get {
                return ResourceManager.GetString("ProjectFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove repository not found or not unique.
        /// </summary>
        internal static string RemoteNotFoundOrNotUnique {
            get {
                return ResourceManager.GetString("RemoteNotFoundOrNotUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote package contains several tags: &quot;{0}&quot;.
        /// </summary>
        internal static string RemotePackageContainsSeveralTags {
            get {
                return ResourceManager.GetString("RemotePackageContainsSeveralTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote package version number is higher or equal to the version number of the local package.
        /// </summary>
        internal static string RemotePackageHasHigherOrEqualVersion {
            get {
                return ResourceManager.GetString("RemotePackageHasHigherOrEqualVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring nuget packages for &apos;{0}&apos; at head tip ID sha &apos;{1}&apos;.
        /// </summary>
        internal static string Restoring {
            get {
                return ResourceManager.GetString("Restoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching local package.
        /// </summary>
        internal static string SearchingLocalPackage {
            get {
                return ResourceManager.GetString("SearchingLocalPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching remote package.
        /// </summary>
        internal static string SearchingRemotePackage {
            get {
                return ResourceManager.GetString("SearchingRemotePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote package tags are: &quot;{0}&quot;.
        /// </summary>
        internal static string TagsAre {
            get {
                return ResourceManager.GetString("TagsAre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown nuget feed &apos;{0}&apos;, please add to &quot;{1}&quot; in your SecretRepository.
        /// </summary>
        internal static string UnknownNugetFeed {
            get {
                return ResourceManager.GetString("UnknownNugetFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating &quot;{0}&quot;.
        /// </summary>
        internal static string UpdatingFile {
            get {
                return ResourceManager.GetString("UpdatingFile", resourceCulture);
            }
        }
    }
}
